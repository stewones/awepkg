!function(){"use strict";angular.module("awepkg.module",[])}(),function(){"use strict";angular.module("awepkg.module").config(["$stateProvider",function(e){e.state("app.awepkg-add",{url:"/awepkg/add",title:"New awepkg",views:{content:{templateUrl:"app/modules/awepkg/crud/awepkg-add.html",controller:"AwepkgCtrl",controllerAs:"vm"}},resolve:{}}).state("app.awepkg-list",{url:"/awepkg/",title:"Listing awepkg",views:{content:{templateUrl:"app/modules/awepkg/crud/awepkg-list.html",controller:"AwepkgCtrl",controllerAs:"vm"}},resolve:{}}).state("app.awepkg-view",{url:"/awepkg/:id",title:"View of awepkg",views:{content:{templateUrl:"app/modules/awepkg/crud/awepkg-view.html",controller:"AwepkgCtrl",controllerAs:"vm"}},resolve:{}})}])}(),function(){"use strict";angular.module("awepkg.module").controller("AwepkgCtrl",["$page","setting",function(e,t){function o(){}e.title(t.name+t.titleSeparator+" "),o()}])}(),function(){"use strict";angular.module("awepkg.module").provider("awepkg",function(){this.$get=this.get=["$scope","lodash",function(e,t){return{}}]})}(),function(){"use strict";angular.module("awepkg.module").service("Awepkg",["$q","$sessionStorage","$http","$timeout","$log","lodash",function(e,t,o,r,a,l){function p(r){var l=e.defer();if(this.id?t.openAwepkg=this:t.newAwepkg=this,r){var p="api_url_goes_here";this.id?o.put(p,this).success(function(e){l.resolve(e)}).error(function(e){a.error("impossible to save Awepkg",e),l.reject(e)}):o.post(p,this).success(function(e){l.resolve(e)}).error(function(e){a.error("impossible to create Awepkg",e),l.reject(e)})}return l.promise}var i=function(e){e=e?e:{},e.busy=!!e.busy&&e.busy,angular.extend(this,e)};return i.prototype.save=p,i}])}(),angular.module("awepkg").run(["$templateCache",function(e){e.put("app/modules/awepkg/crud/awepkgadd.html","<div id=awepkg-module-add></div>"),e.put("app/modules/awepkg/crud/awepkglist.html","<div id=awepkg-module-list></div>"),e.put("app/modules/awepkg/crud/awepkgview.html","<div id=awepkg-module-view></div>")}]);